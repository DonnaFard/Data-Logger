%% Underwater Glider SawTooth motion test result
% This report refers to our first attempt of data gathering with ROUGHIE1.  
% our objective was validating four available sensors onboard: Pressure
% sensor, IMU, Dinamyxle encoder and draw wire sensor.
% 
%%
clear all
close all
clc

%% Loading and Parsing data into 3 groups
load data4.mat
aPar=1; % lower limit for parsing
bPar=23000; % upper limit for parsing
sec=data4(aPar:bPar,1);
rawpressure=data4(aPar:bPar,2);
IMUP=data4(aPar:bPar,3);
IMUR=data4(aPar:bPar,4);
Tank=data4(aPar:bPar,5);
LinMass=data4(aPar:bPar,7);

%% Depth and Pressure Measurment
voltage=rawpressure*5/1023-.44;
pressure=voltage*(15/4);
depth=(-pressure*2.30665873688);
tt=sec<550;
newTime=sec(tt);

startTime=7384;
index=length(newTime);
[num den] = butter(3, 0.1, 'low');
output = filter(num, den, depth);
plot(output)
figure(1)
% plot(newTime(startTime:end)-225.9,output(startTime:index))
plot(newTime(startTime:startTime+2384)-225.9,output(startTime:startTime+2384))
xlabel('time- sec');
ylabel('Depth- Feet');
title('Saw-tooth Motion')
%% pitch
% filter noise
[num1 den1] = cheby1(3,50,0.95, 'low');
output2 = filter(num1, den1, IMUP);
figure(2)
% plot(output2)
plot(newTime(startTime:startTime+2384)-225.9,output2(startTime:startTime+2384))

%% IMPU Roll angle
[num2 den2] = cheby1(3,50,0.95, 'low');
output3 = filter(num2, den2, IMUR);
figure(3)
plot(output3)
%% Time sampling
stepp=length(sec);
for i=1:stepp-1
    deltaT(i)=sec(i+1)-sec(i);
end
[num3 den3] = cheby1(3,50,0.95, 'low');
%[num4 den4] = obutter(3, 0.1, 'low');
output4 = filter(num3, den3, deltaT);
figure(4)
plot(output4)
%% Interpolation

desTime=0:0.032:735.4;
desDepth=interp1(sec,depth,desTime);
% figure(5)
% plot(sec,depth,desTime,desDepth,':.')
%% calculating vertical speed  
dist=length(desTime);
speed=zeros(1,22982);
time=zeros(1,22982);
for i=1:dist-2000
    temp_d(i)=desDepth(i+2000)-desDepth(i);
    temp_t(i)=(desTime(i+2000)-desTime(i));
    speed(i)=temp_d(i)/temp_t(i);
    time(i)=desTime(i+2000);
    i=i+2000;
 end
 i;
plot(time,speed)

%% Tank draw wire Measurment
newTank=Tank+27;
TDWVoltage=(newTank*5/1023);
PistonMove=(TDWVoltage*4.16/5);
Travel=(PistonMove*3.16/4.16)-2.3;
RadiusP=3.01;
Volume=Travel*pi*RadiusP^2;
in2m=1.63871e-5;
FBuoyancy=(998*9.81*Volume*in2m); %N
FB=FBuoyancy*0.224808943;% lbf
plot(newTime(startTime:end),FB(startTime:index))
%% Linear Mass Position
tempBat=(LinMass*300/1023)-87.27+14.84;   
BattMove=4*sind(tempBat);
tt=sec<581.8;
newTime=sec(tt);
index=length(newTime);
plot(newTime,BattMove(1:index))
xlabel('time- sec');
ylabel('Battery Movement');
title(' linear Pitch mass profile')

%% system identification
% 
% N=length(sec1.data);
% u=idinput(N,rgs);
num=[7.393 -0.02055];
den=[1 0.7816 0.003426];
mysys=tf(num,den);
